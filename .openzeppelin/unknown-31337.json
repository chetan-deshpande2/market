{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x7e93419e8da4ebb662064995f6e94b238ef6692f0e6a9a6556534bd4339cd616",
      "kind": "uups"
    }
  ],
  "impls": {
    "83427e3a2ea618b11eab289c9743d0523aa2e7f184c0ef785b20e8e080c2dcb1": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x32359bae220eec3ef423f0eb3abf9aeefc144096690c370a715e0a0f5a7d73f4",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "contracts/EIP712Upgradeable.sol:29"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "contracts/EIP712Upgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "contracts/EIP712Upgradeable.sol:141"
          },
          {
            "label": "marketplaceFee",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "LNMarketplace",
            "src": "contracts/Marketplace.sol:112"
          },
          {
            "label": "superAdminShare",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "LNMarketplace",
            "src": "contracts/Marketplace.sol:113"
          },
          {
            "label": "royaltyLimit",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "LNMarketplace",
            "src": "contracts/Marketplace.sol:114"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "256",
            "type": "t_address_payable",
            "contract": "LNMarketplace",
            "src": "contracts/Marketplace.sol:116"
          },
          {
            "label": "orderIsCancelledOrCompleted",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "contract": "LNMarketplace",
            "src": "contracts/Marketplace.sol:119"
          },
          {
            "label": "amountOf1155TokensLeftToSell",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "LNMarketplace",
            "src": "contracts/Marketplace.sol:122"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
